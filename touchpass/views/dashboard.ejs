<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="/stylesheets/styles1.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <title>Player Dashboard</title>
</head>

<body>
  <%- include('partials/header') %>

  <% if (player) { %>
  <div class="container mt-4">
    <h2>Team: <b><%= player.Metadata.team %></b>, Player: <b><%= player.Metadata.number %></b></h2>
    <form>
      <div class="form-group">
        <label for="team">Type:</label>
        <select class="form-control" name="gameType" id="gameType">
          <option value=9>SKILLS</option>
          <option value=0>RIGHT</option>
          <option value=1>LEFT</option>
          <option value=2>RANDOM</option>
        </select>
      </div>
      <button type="button" class="btn btn-primary btn-block" onclick="startGame()">Start Game</button>
    </form>

    <div class="team mt-3" id="totalGames">Number of Games:</div>
    <div class="team" id="totalScore">Total Points Scored:</div>
    <div class="team" id="medianReaction">Median Reaction Time:</div>
  </div>
  <% } %>

  <div class="container-fluid mt-4">
    <ul class="game-states list-unstyled">
      <% gameStates.forEach(game => { %>
      <li class="game-state mb-4 p-3 border rounded">
        <h2>TARGETS: <%= game.GameName %> DURATION: <%= game.Duration %></h2>
        <h2>Score: <%= game.Score %></h2>
        <div class="team" id="reactionTime<%= game.GameID %>">Median Reaction Time: </div>
        <div class="team" id="time<%= game.GameID %>"><%= new Date(game.Timestamp) %></div>
        <canvas id="reactionTimeChart<%= game.GameID %>" width="400" height="200"></canvas>
      </li>
      <% }) %>
    </ul>
  </div>

  <%- include('partials/footer') %>
  <script src="/js/script.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const gameStates = <%- JSON.stringify(gameStates) %>;
    console.log(gameStates);
    var totalPoints = 0;
    var totalGames = 0;
    var totalReactionTimes = [];
    gameStates.forEach(game => {
      var dataArray = game.Metadata.reactionTimes;
      totalPoints += game.Score;
      totalGames++;
      dataArray.shift();
      var gameMedian = calculateMedian(dataArray);
      document.getElementById("reactionTime"+ game.GameID).innerText = "Median Reaction Time: " + gameMedian + " ms";
      totalReactionTimes = totalReactionTimes.concat(dataArray);
      const ctx = document.getElementById('reactionTimeChart' + game.GameID).getContext('2d');
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: dataArray.map((_, index) => (index + 1)),
          datasets: [{
            label: 'Reaction Time (ms)',
            data: dataArray,
            borderColor: 'rgba(75, 192, 192, 1)',
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            fill: true,
            tension: 0.1
          }]
        },
        options: {
          responsive: true,
          scales: {
            x: {
              title: {
                display: true,
                text: 'SCORE'
              }
            },
            y: {
              title: {
                display: true,
                text: 'Reaction Time (ms)'
              }
            }
          }
        }
      });
    });
    document.getElementById("totalGames").innerText = "Number of Games: " + totalGames;
    document.getElementById("totalScore").innerText = "Total Points Scored: " + totalPoints;
    document.getElementById("medianReaction").innerText = "Median Reaction Time: " + calculateMedian(totalReactionTimes)+ " ms";
    
    function calculateMedian(arr) {
      const sortedArr = [...arr].sort((a, b) => a - b);
      const arrLength = sortedArr.length;
      const middleIndex = Math.floor(arrLength / 2);

      if (arrLength % 2 === 0) {
        return (sortedArr[middleIndex - 1] + sortedArr[middleIndex]) / 2;
      } else {
        return sortedArr[middleIndex];
      }
    }

    function startGame() {
      var e = document.getElementById("gameType");
      var gameType = e.value;  
      var xhr = new XMLHttpRequest();
      xhr.open("POST", '/start-game', true);
      xhr.setRequestHeader('Content-Type', 'application/json');
      xhr.send(JSON.stringify({
        value: <%- JSON.stringify(player) %>,
        type: gameType
      }));
    }
  </script>
</body>

</html>